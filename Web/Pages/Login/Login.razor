@page "/login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using NetcodeHub.Packages.Extensions.SessionStorage
@using Web.Clients
@using Web.Components.Notification
@using Web.Layout
@using Web.Models
@using Web.Services
@layout EmptyLayout

@inject NavigationManager NavigationManager
@inject IAuthClient AuthClient
@inject ISessionStorageService SessionStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NotificationService NotificationService

<div class="flex justify-center items-center h-full">
    <div>
        <div class="p-8 border border-light-background-tertiary dark:border-dark-background-tertiary rounded-md shadow-md bg-light-background dark:bg-dark-background">
            <div class="flex items-center gap-2 mb-8">
                <i class="ph ph-[planet] text-4xl"></i>
                <p class="text-sm">WorkSpace</p>
            </div>
            <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <div class="mb-4">
                    <div class="flex gap-2 mb-2">
                        <div class="flex gap-2 justify-center items-center">
                            <i class="ph ph-[envelope-simple] text-2xl"></i>
                            <label class="block text-sm font-medium">Email</label>
                        </div>
                        <ValidationMessage For="@(() => _loginModel.Email)" class="text-red-500 text-xs mt-1" />
                    </div>
                    <input type="email" id="email" @bind="_loginModel.Email" 
                           class="w-full px-3 py-2 bg-light-background-secondary dark:bg-dark-background-secondary rounded-md border border-light-background-tertiary dark:border-dark-background-tertiary" 
                           placeholder="you@example.com" />
                </div>
                <div class="mb-4">
                    <div class="flex gap-2 mb-2">
                        <div class="flex gap-2 justify-center items-center">
                            <i class="ph ph-[lock-simple] text-2xl"></i>
                            <label class="block text-sm font-medium">Password</label>
                        </div>
                        <ValidationMessage For="@(() => _loginModel.Password)" class="text-red-500 text-xs mt-1" />
                    </div>
                    <input type="password" id="password" @bind="_loginModel.Password" 
                           class="w-full px-3 py-2 bg-light-background-secondary dark:bg-dark-background-secondary rounded-md border border-light-background-tertiary dark:border-dark-background-tertiary" 
                           placeholder="*********" />
                </div>
                <div class="mt-8">
                    <button type="submit" class="w-full bg-light-background-secondary dark:bg-dark-background-secondary hover:bg-light-background-tertiary dark:hover:bg-dark-background-tertiary py-2 rounded-md cursor-pointer">Login</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel _loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var result = await AuthClient.Login(_loginModel);
        
        if (result is { IsSuccessStatusCode: true, Content: not null })
        {
            await SessionStorageService.SaveAsEncryptedStringAsync("access-token", result.Content.AccessToken);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _loginModel = new LoginModel();
            await NotificationService.Show("Invalid email or password", Notification.NotificationType.Error);
        }
    }
}
